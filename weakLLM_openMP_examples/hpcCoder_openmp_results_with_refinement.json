[
  {
    "id": "s001061911.cpp",
    "original_code": "#include <iostream>\n#include <stdlib.h>\n\nusing namespace std;\n\nint main() {\n\tconst int len = 10;\n\tint arr[len];\n\n\tfor (int i = 0; i < len; i++)\n\t\tcin >> arr[i];\n\n\tfor (int i = 0; i < len; i++)\n\t\tfor (int j = 0; j < len; j++)\n\t\t\tif (arr[i] < arr[j])\n\t\t\t\tswap(arr[i], arr[j]);\n\n\tfor (int i = len - 1; len - 4 < i; i--)\n\t\tcout << arr[i] << endl;\n\n\treturn 0;\n}",
    "translated_code": "#include <iostream>\n#include <stdlib.h>\n#include <omp.h>\n\nusing namespace std;\n\nint main() {\n\tconst int len = 10;\n\tint arr[len];\n\n\tfor (int i = 0; i < len; i++)\n\t\tcin >> arr[i];\n\n\t#pragma omp parallel for\n\tfor (int i = 0; i < len; i++)\n\t\tfor (int j = 0; j < len; j++)\n\t\t\tif (arr[i] < arr[j])\n\t\t\t\tswap(arr[i], arr[j]);\n\n\t#pragma omp parallel for\n\tfor (int i = len - 1; len - 4 < i; i--)\n\t\tcout << arr[i] << endl;\n\n\treturn 0;\n}",
    "refined": false,
    "source": "/tmp/tmpzdf_lams/program_0.cpp",
    "executable": "/tmp/tmpzdf_lams/program_0",
    "compile_stdout": "",
    "compile_stderr": "",
    "compile_success": true,
    "run_stdout": "",
    "run_stderr": "Timeout",
    "run_success": false
  },
  {
    "id": "s002114670.cpp",
    "original_code": "#include <algorithm>\n#include <iostream>\n#include <vector>\n\nint main() {\n    std::vector<int> hills;\n    \n    int n;\n    while (std::cin >> n) {\n        hills.push_back(n);\n    }\n    \n    std::sort(hills.begin(), hills.end(), std::greater<int>());\n    \n    for (int i = 0; i < 3; ++i) {\n        std::cout << hills[i] << std::endl;\n    }\n    \n    return 0;\n}",
    "translated_code": "",
    "refined": true,
    "source": "/tmp/tmpzdf_lams/program_1_refined.cpp",
    "executable": "/tmp/tmpzdf_lams/program_1_refined",
    "compile_stdout": "",
    "compile_stderr": "/usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/11/../../../x86_64-linux-gnu/Scrt1.o: in function `_start':\n(.text+0x1b): undefined reference to `main'\ncollect2: error: ld returned 1 exit status",
    "compile_success": false,
    "run_stdout": "",
    "run_stderr": "Skipped due to compile error",
    "run_success": false
  },
  {
    "id": "s003006852.cpp",
    "original_code": "#include <iostream>\n#include <queue>\n\nusing namespace std;\n\nint main() {\n    priority_queue<int> pq;\n\n    for (int i = 0; i < 10; ++i) {\n        int height;\n        cin >> height;\n        pq.emplace(height);\n    }\n\n\n    for (int i = 0; i <= 2; ++i) {\n        std::cout << pq.top() << endl;\n        pq.pop();\n    }\n\n    return 0;\n}",
    "translated_code": "",
    "refined": true,
    "source": "/tmp/tmpzdf_lams/program_2_refined.cpp",
    "executable": "/tmp/tmpzdf_lams/program_2_refined",
    "compile_stdout": "",
    "compile_stderr": "/usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/11/../../../x86_64-linux-gnu/Scrt1.o: in function `_start':\n(.text+0x1b): undefined reference to `main'\ncollect2: error: ld returned 1 exit status",
    "compile_success": false,
    "run_stdout": "",
    "run_stderr": "Skipped due to compile error",
    "run_success": false
  },
  {
    "id": "s003189043.cpp",
    "original_code": "#include <cstdlib> \n#include <iostream>\n\nusing namespace std;\n\nint cmp(int* a, int* b)\n{\n\treturn (*a < *b) ? 1 : ((*a > *b) ? -1 : 0);\n}\n\nint main()\n{\n\tint dat[10];\n\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\tcin >> dat[i];\n\t}\n\n\tqsort(dat, 10, sizeof(int), reinterpret_cast<int(*) (const void*, const void*)>(cmp));\n\n\tfor (int i = 0; i < 3; i++)\n\t{\n\t\tcout << dat[i] << endl;\n\t}\n\n\treturn 0;\n}",
    "translated_code": "#include <cstdlib> \n#include <iostream>\n#include <omp.h>\n\nusing namespace std;\n\nint cmp(int* a, int* b)\n{\n\treturn (*a < *b) ? 1 : ((*a > *b) ? -1 : 0);\n}\n\nint main()\n{\n\tint dat[10];\n\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\tcin >> dat[i];\n\t}\n\n\tqsort(dat, 10, sizeof(int), reinterpret_cast<int(*) (const void*, const void*)>(cmp));\n\n\t#pragma omp parallel for\n\tfor (int i = 0; i < 3; i++)\n\t{\n\t\tcout << dat[i] << endl;\n\t}\n\n\treturn 0;\n}",
    "refined": false,
    "source": "/tmp/tmpzdf_lams/program_3.cpp",
    "executable": "/tmp/tmpzdf_lams/program_3",
    "compile_stdout": "",
    "compile_stderr": "",
    "compile_success": true,
    "run_stdout": "",
    "run_stderr": "Timeout",
    "run_success": false
  },
  {
    "id": "s003898708.cpp",
    "original_code": "#include<iostream>\nusing namespace std;\nint main()\n{\n    int a[100],i,j,temp;\n    for(i=1;i<=10;i++){\n        cin>>a[i];\n    }\n        temp = a[0];\n        for(i=1;i<=10;i++){\n        for(j=i;j<=10;j++){\n            if(a[i]<a[j]){\n                temp = a[i];\n                a[i]=a[j];\n                a[j]= temp;\n            }\n        }\n    }\n    for(i=1;i<=3;i++){\n        cout<<a[i]<<endl;\n    }\n    return 0;\n\n}",
    "translated_code": "#include<iostream>\n#include<omp.h>\nusing namespace std;\nint main()\n{\n    int a[100],i,j,temp;\n    for(i=1;i<=10;i++){\n        cin>>a[i];\n    }\n    #pragma omp parallel for shared(a) private(i,j,temp)\n    for(i=1;i<=10;i++){\n        for(j=i;j<=10;j++){\n            if(a[i]<a[j]){\n                temp = a[i];\n                a[i]=a[j];\n                a[j]= temp;\n            }\n        }\n    }\n    for(i=1;i<=3;i++){\n        cout<<a[i]<<endl;\n    }\n    return 0;\n\n}",
    "refined": false,
    "source": "/tmp/tmpzdf_lams/program_4.cpp",
    "executable": "/tmp/tmpzdf_lams/program_4",
    "compile_stdout": "",
    "compile_stderr": "",
    "compile_success": true,
    "run_stdout": "",
    "run_stderr": "Timeout",
    "run_success": false
  },
  {
    "id": "s004707294.cpp",
    "original_code": "#include<iostream>\n#include<algorithm>\nusing namespace std;\n \nint main(){\n     int a[10],i,judge;\n     for(i=0;i<10;i++) cin >> a[i];\n     judge = 0;\n     do{\n       judge = 1;\n       for(i=0;i<9;i++){\n         if(a[i]<a[i+1]){\n           swap(a[i],a[i+1]);\n           judge = 0;\n         }\n       }\n     }while(!judge);\n \n     for(i=0;i<3;i++)\n       cout << a[i] << endl;\n \n   return 0;\n}",
    "translated_code": "#include<iostream>\n#include<algorithm>\n#include<omp.h>\nusing namespace std;\n \nint main(){\n     int a[10],i,judge;\n     for(i=0;i<10;i++) cin >> a[i];\n     judge = 0;\n     do{\n       judge = 1;\n       #pragma omp parallel for\n       for(i=0;i<9;i++){\n         if(a[i]<a[i+1]){\n           swap(a[i],a[i+1]);\n           judge = 0;\n         }\n       }\n     }while(!judge);\n \n     for(i=0;i<3;i++)\n       cout << a[i] << endl;\n \n   return 0;\n}",
    "refined": false,
    "source": "/tmp/tmpzdf_lams/program_5.cpp",
    "executable": "/tmp/tmpzdf_lams/program_5",
    "compile_stdout": "",
    "compile_stderr": "",
    "compile_success": true,
    "run_stdout": "",
    "run_stderr": "Timeout",
    "run_success": false
  },
  {
    "id": "s005845061.cpp",
    "original_code": "#include <iostream>\n#include <stdio.h>\nusing namespace std;\nint main(){\n    int fst = 0;\n    int snd = 0;\n    int thd = 0;\n    int tmp=0;\n    std::cin >> fst;\n    for(int i=0;i<9;i++) {\n        tmp = 0;\n        std::cin >> tmp;\n        if(fst < tmp) {\n            thd = snd;\n            snd = fst;\n            fst = tmp;\n        }else if(tmp > snd){\n            thd = snd;\n            snd = tmp;\n        }else if(tmp > thd){\n            thd = tmp;\n        }else{}\n    }\n    printf(\"%d\\n%d\\n%d\\n\",fst,snd,thd);\n}",
    "translated_code": "#include <iostream>\n#include <stdio.h>\n#include <omp.h>\nusing namespace std;\nint main(){\n    int fst = 0;\n    int snd = 0;\n    int thd = 0;\n    int tmp=0;\n    std::cin >> fst;\n    #pragma omp parallel for\n    for(int i=0;i<9;i++) {\n        tmp = 0;\n        std::cin >> tmp;\n        #pragma omp critical\n        {\n            if(fst < tmp) {\n                thd = snd;\n                snd = fst;\n                fst = tmp;\n            }else if(tmp > snd){\n                thd = snd;\n                snd = tmp;\n            }else if(tmp > thd){\n                thd = tmp;\n            }else{}\n        }\n    }\n    printf(\"%d\\n%d\\n%d\\n\",fst,snd,thd);\n}",
    "refined": false,
    "source": "/tmp/tmpzdf_lams/program_6.cpp",
    "executable": "/tmp/tmpzdf_lams/program_6",
    "compile_stdout": "",
    "compile_stderr": "",
    "compile_success": true,
    "run_stdout": "",
    "run_stderr": "Timeout",
    "run_success": false
  },
  {
    "id": "s006914968.cpp",
    "original_code": "#include<iostream>\nusing namespace std;\nint main(){\n\tint m[10];\n\tint i,j;\n\tfor(i=0;i<10;i++){\n\t\tcin >> m[i];\n\t}\n\tint tmp;\n\tfor(i=0;i<9;i++){\n\t\tfor(j=i+1;j<10;j++){\n\t\t\tif(m[i] <= m[j]){\n\t\t\t\ttmp = m[i];\n\t\t\t\tm[i] = m[j];\n\t\t\t\tm[j] = tmp;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0;i<3;i++)\n\t\tcout << m[i] << endl;\n\treturn 0;\n}",
    "translated_code": "#include<iostream>\n#include<omp.h>\nusing namespace std;\nint main(){\n\tint m[10];\n\tint i,j;\n\tfor(i=0;i<10;i++){\n\t\tcin >> m[i];\n\t}\n\tint tmp;\n\t#pragma omp parallel for\n\tfor(i=0;i<9;i++){\n\t\tfor(j=i+1;j<10;j++){\n\t\t\tif(m[i] <= m[j]){\n\t\t\t\ttmp = m[i];\n\t\t\t\tm[i] = m[j];\n\t\t\t\tm[j] = tmp;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0;i<3;i++)\n\t\tcout << m[i] << endl;\n\treturn 0;\n}",
    "refined": false,
    "source": "/tmp/tmpzdf_lams/program_7.cpp",
    "executable": "/tmp/tmpzdf_lams/program_7",
    "compile_stdout": "",
    "compile_stderr": "",
    "compile_success": true,
    "run_stdout": "",
    "run_stderr": "Timeout",
    "run_success": false
  },
  {
    "id": "s007042193.cpp",
    "original_code": "#include <iostream>\n\nusing namespace std;\n\nint main()\n{\n\tlong long a[100];\n\tlong long max, bat,temp, temp1;\n\tbat = 10;\n\tfor (int i = 1; i <= 10; i++)\n\t\tcin >> a[i];\n\t\n\tfor (int i = 1; i <= 11; i++)\n\t{\n\t\tmax = 0;\n\t\tfor (int j = 1; j <= bat; j++)\n\t\t\tif(a[j] > max)\n\t\t\t{\n\t\t\t\tmax = a[j];\n\t\t\t\ttemp1 = j;\n\t\t\t}\n\t\t\n\t\ttemp = a[bat];\n\t\ta[bat] = a[temp1];\n\t\ta[temp1] = temp;\n\t\tbat--;\n\t\t\n\t}\n\tfor (int i = 10; i > 7; i--)\n\t\tcout << a[i] << endl;\n\t\n}",
    "translated_code": "#include <iostream>\n#include <omp.h>\n\nusing namespace std;\n\nint main()\n{\n\tlong long a[100];\n\tlong long max, bat,temp, temp1;\n\tbat = 10;\n\t#pragma omp parallel for\n\tfor (int i = 1; i <= 10; i++)\n\t\tcin >> a[i];\n\t\n\t#pragma omp parallel for\n\tfor (int i = 1; i <= 11; i++)\n\t{\n\t\tmax = 0;\n\t\t#pragma omp parallel for reduction(max:max)\n\t\tfor (int j = 1; j <= bat; j++)\n\t\t\tif(a[j] > max)\n\t\t\t{\n\t\t\t\tmax = a[j];\n\t\t\t\ttemp1 = j;\n\t\t\t}\n\t\t\n\t\ttemp = a[bat];\n\t\ta[bat] = a[temp1];\n\t\ta[temp1] = temp;\n\t\tbat--;\n\t\t\n\t}\n\t#pragma omp parallel for\n\tfor (int i = 10; i > 7; i--)\n\t\tcout << a[i] << endl;\n\t\n}",
    "refined": false,
    "source": "/tmp/tmpzdf_lams/program_8.cpp",
    "executable": "/tmp/tmpzdf_lams/program_8",
    "compile_stdout": "",
    "compile_stderr": "",
    "compile_success": true,
    "run_stdout": "",
    "run_stderr": "Timeout",
    "run_success": false
  },
  {
    "id": "s007830238.cpp",
    "original_code": "#include <iostream>\nusing namespace std;\n\nint main() {\n\tint a[10];\n\tfor(int i=0;i<10;i++)\n\tcin>>a[i];\n\tfor(int j=0;j<10;j++)\n\t{for(int i=0;i<10-1;i++)\n\t{\n\t\tif(a[i]<a[i+1])\n\t\t{\n\t\t\tint temp;\n\t\t\ttemp=a[i];\n\t\t\ta[i]=a[i+1];\n\t\t\ta[i+1]=temp;\n\t\t}\n\t}}\n\tfor(int i=0;i<3;i++)\n\tcout<<a[i]<<endl;\n\treturn 0;\n}\n",
    "translated_code": "#include <iostream>\n#include <omp.h>\nusing namespace std;\n\nint main() {\n\tint a[10];\n\tfor(int i=0;i<10;i++)\n\tcin>>a[i];\n\t#pragma omp parallel for\n\tfor(int j=0;j<10;j++)\n\t{for(int i=0;i<10-1;i++)\n\t{\n\t\tif(a[i]<a[i+1])\n\t\t{\n\t\t\tint temp;\n\t\t\ttemp=a[i];\n\t\t\ta[i]=a[i+1];\n\t\t\ta[i+1]=temp;\n\t\t}\n\t}}\n\tfor(int i=0;i<3;i++)\n\tcout<<a[i]<<endl;\n\treturn 0;\n}",
    "refined": false,
    "source": "/tmp/tmpzdf_lams/program_9.cpp",
    "executable": "/tmp/tmpzdf_lams/program_9",
    "compile_stdout": "",
    "compile_stderr": "",
    "compile_success": true,
    "run_stdout": "",
    "run_stderr": "Timeout",
    "run_success": false
  },
  {
    "id": "s010845670.cpp",
    "original_code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nint main(){\n  vector<int> h(10);\n  for(int i=0;i<10;++i)\n\tcin >> h[i];\n  sort(h.begin(), h.end());\n  for(int i=0;i<3;++i)\n\tcout << h[9-i] << endl;\n  return 0;\n}",
    "translated_code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <omp.h>\n\nusing namespace std;\n\nint main(){\n  vector<int> h(10);\n  for(int i=0;i<10;++i)\n\tcin >> h[i];\n  sort(h.begin(), h.end());\n#pragma omp parallel for\n  for(int i=0;i<3;++i)\n\tcout << h[9-i] << endl;\n  return 0;\n}",
    "refined": false,
    "source": "/tmp/tmpzdf_lams/program_10.cpp",
    "executable": "/tmp/tmpzdf_lams/program_10",
    "compile_stdout": "",
    "compile_stderr": "",
    "compile_success": true,
    "run_stdout": "",
    "run_stderr": "Timeout",
    "run_success": false
  },
  {
    "id": "s012636535.cpp",
    "original_code": "#include <iostream>\n\nusing namespace std;\n\nint main(){\n    \n    int h[10], i;\n    \n    for(i = 0; i < 10; i++){\n        \n        cin >> h[i];\n        \n        if(h[i] < 0 || h[i] > 10000)\n            i--;\n    }\n    \n    int a = 0, b = 0, c = 0, temp;\n    \n    for(i = 0; i < 10; i++){\n        \n        if(h[i] > c){\n            c = h[i];\n            if(c > b){\n                temp = b;\n                b = c;\n                c = temp;\n                if(b > a){\n                    temp = a;\n                    a = b;\n                    b = temp;\n                }\n            }\n        }\n    }\n    \n    cout << a << \"\\n\" << b << \"\\n\" << c << \"\\n\";\n    \n    return 0;\n}",
    "translated_code": "#include <iostream>\n#include <omp.h>\n\nusing namespace std;\n\nint main(){\n    \n    int h[10], i;\n    \n    for(i = 0; i < 10; i++){\n        \n        cin >> h[i];\n        \n        if(h[i] < 0 || h[i] > 10000)\n            i--;\n    }\n    \n    int a = 0, b = 0, c = 0, temp;\n    \n    #pragma omp parallel for reduction(max:a,b,c)\n    for(i = 0; i < 10; i++){\n        \n        if(h[i] > c){\n            c = h[i];\n            if(c > b){\n                temp = b;\n                b = c;\n                c = temp;\n                if(b > a){\n                    temp = a;\n                    a = b;\n                    b = temp;\n                }\n            }\n        }\n    }\n    \n    cout << a << \"\\n\" << b << \"\\n\" << c << \"\\n\";\n    \n    return 0;\n}",
    "refined": false,
    "source": "/tmp/tmpzdf_lams/program_11.cpp",
    "executable": "/tmp/tmpzdf_lams/program_11",
    "compile_stdout": "",
    "compile_stderr": "",
    "compile_success": true,
    "run_stdout": "",
    "run_stderr": "Timeout",
    "run_success": false
  },
  {
    "id": "s012704191.cpp",
    "original_code": "#include<iostream>\nusing namespace std;\n\nint main(){\n\tint mountain[10], first=0, second=0, third=0;\n\tfor(int j=0; j<10; j++){\n\t\tmountain[j]=0;\n\t}\n\n\tfor(int i=0; i<10; i++){\n\t\tcin >> mountain[i];\n\t\tif(first <= mountain[i]){\n\t\t\tthird = second;\n\t\t\tsecond = first;\t\t\t\n\t\t\tfirst = mountain[i];\n\t\t}\n\t\telse if(mountain[i]<=first && mountain[i]>=second){\n\t\t\tthird = second;\n\t\t\tsecond = mountain[i];\n\t\t}\n\t\telse if(mountain[i]<=second && mountain[i]>=third){\n\t\t\tthird = mountain[i];\n\t\t}\n\t}\n\tcout << first << \"\\n\" << second << \"\\n\" << third << endl;\n\n\treturn 0;\n}",
    "translated_code": "#include<iostream>\n#include<omp.h>\nusing namespace std;\n\nint main(){\n\tint mountain[10], first=0, second=0, third=0;\n\tfor(int j=0; j<10; j++){\n\t\tmountain[j]=0;\n\t}\n\n\t#pragma omp parallel for\n\tfor(int i=0; i<10; i++){\n\t\tcin >> mountain[i];\n\t\t#pragma omp critical\n\t\t{\n\t\t\tif(first <= mountain[i]){\n\t\t\t\tthird = second;\n\t\t\t\tsecond = first;\t\t\t\n\t\t\t\tfirst = mountain[i];\n\t\t\t}\n\t\t\telse if(mountain[i]<=first && mountain[i]>=second){\n\t\t\t\tthird = second;\n\t\t\t\tsecond = mountain[i];\n\t\t\t}\n\t\t\telse if(mountain[i]<=second && mountain[i]>=third){\n\t\t\t\tthird = mountain[i];\n\t\t\t}\n\t\t}\n\t}\n\tcout << first << \"\\n\" << second << \"\\n\" << third << endl;\n\n\treturn 0;\n}",
    "refined": false,
    "source": "/tmp/tmpzdf_lams/program_12.cpp",
    "executable": "/tmp/tmpzdf_lams/program_12",
    "compile_stdout": "",
    "compile_stderr": "",
    "compile_success": true,
    "run_stdout": "",
    "run_stderr": "Timeout",
    "run_success": false
  },
  {
    "id": "s022801097.cpp",
    "original_code": "#include <iostream>\n#include <algorithm>\nusing namespace std;\n \nint main(){\n    int i;\n    int list[10];\n    for(i=0;i<10;i++){\n        cin >> list[i];\n    }\n    sort(list,list+10);\n    for(i=0;i<3;i++){\n        cout << list[9-i] << endl;\n    }\n    return 0;\n}\n",
    "translated_code": "#include <iostream>\n#include <algorithm>\n#include <omp.h>\nusing namespace std;\n \nint main(){\n    int i;\n    int list[10];\n    for(i=0;i<10;i++){\n        cin >> list[i];\n    }\n    sort(list,list+10);\n    #pragma omp parallel for\n    for(i=0;i<3;i++){\n        cout << list[9-i] << endl;\n    }\n    return 0;\n}",
    "refined": false,
    "source": "/tmp/tmpzdf_lams/program_13.cpp",
    "executable": "/tmp/tmpzdf_lams/program_13",
    "compile_stdout": "",
    "compile_stderr": "",
    "compile_success": true,
    "run_stdout": "",
    "run_stderr": "Timeout",
    "run_success": false
  },
  {
    "id": "s024128016.cpp",
    "original_code": "#include<vector>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n\nint main(){\n  vector<int> a;\n  a.resize(10);\n  for(int i=0;i<10;i++){\n    cin>>a[i];\n  }\n  sort(a.begin(),a.end());\n  cout<<a[9]<<endl<<a[8]<<endl<<a[7]<<endl;\n}",
    "translated_code": "#include<vector>\n#include<iostream>\n#include<algorithm>\n#include<omp.h>\nusing namespace std;\n\nint main(){\n  vector<int> a;\n  a.resize(10);\n  for(int i=0;i<10;i++){\n    cin>>a[i];\n  }\n  sort(a.begin(),a.end());\n  #pragma omp parallel num_threads(4)\n  {\n    #pragma omp for\n    for(int i=0;i<10;i++){\n      cout<<a[i]<<endl;\n    }\n  }\n}",
    "refined": false,
    "source": "/tmp/tmpzdf_lams/program_14.cpp",
    "executable": "/tmp/tmpzdf_lams/program_14",
    "compile_stdout": "",
    "compile_stderr": "",
    "compile_success": true,
    "run_stdout": "",
    "run_stderr": "Timeout",
    "run_success": false
  },
  {
    "id": "s028599501.cpp",
    "original_code": "#include<iostream>\nusing namespace std;\n\nint N;\n\nint main(){\n\tN = 10;\n\tint t;\n\tint mh[N];\n\t\n\tfor(int i=0; i<10; i++){\n\t\tcin >> t;\n\t\tif(t>=0 && t<=10000)\n\t\t\tmh[i]=t;\n\t\telse{\n\t\t\ti=i-1;\n\t\t}\n\t}\n\t\n\tfor(int i=0; i<10; i++){\n\t\tfor(int j=i+1; j<10; j++){\n\t\t\tif(mh[i] < mh[j]){\n\t\t\t\tt = mh[i];\n\t\t\t\tmh[i] = mh[j];\n\t\t\t\tmh[j] = t;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor(int i=0; i<3; i++)\n\t\tcout << mh[i] << \"\\n\";\n\t\n\treturn 0;\n}",
    "translated_code": "#include<iostream>\n#include<omp.h>\nusing namespace std;\n\nint N;\n\nint main(){\n\tN = 10;\n\tint t;\n\tint mh[N];\n\t\n\t#pragma omp parallel for\n\tfor(int i=0; i<10; i++){\n\t\tcin >> t;\n\t\tif(t>=0 && t<=10000)\n\t\t\tmh[i]=t;\n\t\telse{\n\t\t\ti=i-1;\n\t\t}\n\t}\n\t\n\t#pragma omp parallel for\n\tfor(int i=0; i<10; i++){\n\t\tfor(int j=i+1; j<10; j++){\n\t\t\tif(mh[i] < mh[j]){\n\t\t\t\tt = mh[i];\n\t\t\t\tmh[i] = mh[j];\n\t\t\t\tmh[j] = t;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor(int i=0; i<3; i++)\n\t\tcout << mh[i] << \"\\n\";\n\t\n\treturn 0;\n}",
    "refined": false,
    "source": "/tmp/tmpzdf_lams/program_15.cpp",
    "executable": "/tmp/tmpzdf_lams/program_15",
    "compile_stdout": "",
    "compile_stderr": "",
    "compile_success": true,
    "run_stdout": "",
    "run_stderr": "Timeout",
    "run_success": false
  },
  {
    "id": "s028710136.cpp",
    "original_code": "#include<cstdio>\n\nint main(){\n    int h[10];\n    for(int i=0;i<10;i++)scanf(\"%d\",&h[i]);\n\n\n    for(int i=0;i<10;i++)\n        for(int j=i+1;j<10;j++)\n        {\n            if(h[i]<h[j])\n            {\n                int box=h[j];\n                h[j]=h[i];\n                h[i]=box;\n            }\n        }\n\n\n    for(int i=0;i<3;i++)printf(\"%d\\n\",h[i]);\n    return 0;\n}",
    "translated_code": "#include<cstdio>\n#include<omp.h>\n\nint main(){\n    int h[10];\n    for(int i=0;i<10;i++)scanf(\"%d\",&h[i]);\n\n    #pragma omp parallel for\n    for(int i=0;i<10;i++)\n        for(int j=i+1;j<10;j++)\n        {\n            if(h[i]<h[j])\n            {\n                int box=h[j];\n                h[j]=h[i];\n                h[i]=box;\n            }\n        }\n\n\n    for(int i=0;i<3;i++)printf(\"%d\\n\",h[i]);\n    return 0;\n}",
    "refined": false,
    "source": "/tmp/tmpzdf_lams/program_16.cpp",
    "executable": "/tmp/tmpzdf_lams/program_16",
    "compile_stdout": "",
    "compile_stderr": "",
    "compile_success": true,
    "run_stdout": "",
    "run_stderr": "Timeout",
    "run_success": false
  },
  {
    "id": "s034649860.cpp",
    "original_code": "#include<bits/stdc++.h>\n\nusing namespace std;\n\nint main()\n{\n    int hi,a=10;\n    vector<int> mou;\n    while(a--)\n    {\n        cin>>hi;\n        mou.push_back(hi);\n    }\n    sort(mou.rbegin(),mou.rend());\n    for(int i=0;i<3;i++)\n        cout<<mou[i]<<endl;\n    return 0;\n}",
    "translated_code": "#include<bits/stdc++.h>\n#include<omp.h>\n\nusing namespace std;\n\nint main()\n{\n    int hi,a=10;\n    vector<int> mou;\n    while(a--)\n    {\n        cin>>hi;\n        mou.push_back(hi);\n    }\n    sort(mou.rbegin(),mou.rend());\n    #pragma omp parallel for\n    for(int i=0;i<3;i++)\n        cout<<mou[i]<<endl;\n    return 0;\n}",
    "refined": false,
    "source": "/tmp/tmpzdf_lams/program_17.cpp",
    "executable": "/tmp/tmpzdf_lams/program_17",
    "compile_stdout": "",
    "compile_stderr": "",
    "compile_success": true,
    "run_stdout": "",
    "run_stderr": "Timeout",
    "run_success": false
  },
  {
    "id": "s046069668.cpp",
    "original_code": "#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <cstring>\n#include <algorithm>\n#include <string>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <set>\n#include <map>\n#include <sstream>\n#include <complex>\n#include <ctime>\n#include <cassert>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef vector<int> VI;\ntypedef pair<int,int> PII;\n\n#define REP(i,s,t) for(int i=(s);i<(t);i++)\n#define FILL(x,v) memset(x,v,sizeof(x))\n\nconst int INF = (int)1E9;\n#define MAXN 100005\n\n\nint main(){\n\tint h[10];\n\tREP(i,0,10) cin >> h[i];\n\tsort(h,h+10,greater<int>());\n\tREP(i,0,3) printf(\"%d\\n\", h[i]);\n\treturn 0;\n}",
    "translated_code": "#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <cstring>\n#include <algorithm>\n#include <string>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <set>\n#include <map>\n#include <sstream>\n#include <complex>\n#include <ctime>\n#include <cassert>\n#include <omp.h>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef vector<int> VI;\ntypedef pair<int,int> PII;\n\n#define REP(i,s,t) for(int i=(s);i<(t);i++)\n#define FILL(x,v) memset(x,v,sizeof(x))\n\nconst int INF = (int)1E9;\n#define MAXN 100005\n\n\nint main(){\n\tint h[10];\n\tREP(i,0,10) cin >> h[i];\n\tsort(h,h+10,greater<int>());\n\t#pragma omp parallel for\n\tREP(i,0,3) printf(\"%d\\n\", h[i]);\n\treturn 0;\n}",
    "refined": false,
    "source": "/tmp/tmpzdf_lams/program_18.cpp",
    "executable": "/tmp/tmpzdf_lams/program_18",
    "compile_stdout": "",
    "compile_stderr": "",
    "compile_success": true,
    "run_stdout": "",
    "run_stderr": "Timeout",
    "run_success": false
  },
  {
    "id": "s046807106.cpp",
    "original_code": "#include<iostream>\n#include<queue>\nusing namespace std;\npriority_queue<int> q1;\nint main(){\n\tint i,j;\n\tfor(i=0;i<10;i++){\n\t\tcin>>j;\n\t\tq1.push(j);\n\t}\n\tfor(i=0;i<3;i++){\n\t\tcout<<q1.top()<<endl;\n\t\tq1.pop();\n\t}\n\treturn 0;\n}",
    "translated_code": "#include<iostream>\n#include<queue>\n#include<omp.h>\nusing namespace std;\npriority_queue<int> q1;\nint main(){\n\tint i,j;\n\t#pragma omp parallel for\n\tfor(i=0;i<10;i++){\n\t\tcin>>j;\n\t\tq1.push(j);\n\t}\n\t#pragma omp parallel for\n\tfor(i=0;i<3;i++){\n\t\tcout<<q1.top()<<endl;\n\t\tq1.pop();\n\t}\n\treturn 0;\n}",
    "refined": false,
    "source": "/tmp/tmpzdf_lams/program_19.cpp",
    "executable": "/tmp/tmpzdf_lams/program_19",
    "compile_stdout": "",
    "compile_stderr": "",
    "compile_success": true,
    "run_stdout": "",
    "run_stderr": "Timeout",
    "run_success": false
  },
  {
    "id": "s053557410.cpp",
    "original_code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<int> vi;\ntypedef pair<int, int> ii;\ntypedef pair<ll, int> li;\ntypedef pair<int, ll> il;\ntypedef vector<ii> vii;\ntypedef vector<il> vil;\ntypedef vector<li> vli;\n\n#define F first\n#define S second\n#define pb(x) push_back(x)\n#define mp(a,b) make_pair(a,b)\n#define sz size()\n#define all(A)    A.begin(), A.end()\n#define mem(a, b) memset(a, b, sizeof(a))\n#define f0(i,b)   for(int i=0;i<(b);i++)\n#define f1(i,b)   for(int i=1;i<=(b);i++)\n#define f2(i,a,b) for(int i=(a);i<=(b);i++)\n#define fr(i,b,a) for(int i=(b);i>=(a);i--)\n#define rep(i,a,b,c) for(int i=(a);i!=(b);i+=(c))\n#define mod 1000000007\n\n#define forr(i,n)    for(i=0; i<n; i++)\n#define whilee(i,t)  while(i!=t)\n#define  sl(a)  scanf(\"%lld\",&a)\n#define  pl(a)  printf(\"%lld\",a)\n\n//for(auto it =A.begin(); it!=A.end(); it++)\n//sort(A.begin(),A.end());\n//binary_search(A.begin(),A.end(),x);\n//reverse(A.begin(), A.end());\n//cout << *max_element(A.begin(), A.end());\n//cout << *min_element(A.begin(), A.end());\n//count(A.begin(), A.end(), X); //counts the occurrences of X\n//distance(A.begin(),A.end());  //distance between first to last element\n//accumulate(A.begin(), A.end(), 0); //add\n//next_permutation(A.begin(), A.end());\n//prev_permutation(A.begin(), A.end());\n//swap(S[0], T[0]);\n//scanf(\"%d\",&x);\n//printf(\"%d\\n\",x);\n\n//vector <int> A;\n//deque <int> A;\n//queue <int> A;\n//stack <int> A;\n//set <int> A;\n//map <int,int> A;\n//pair <int,int> A ;\n//vector <pair <int,int>> A ;\n//char ch;\n//string S, T, U;\nll i, j, k, a, b, c, d, f, g, h, l, m, n=10, p, q, r, s, t, w, x, y, z, maxx=INT_MIN, minn=INT_MAX, ans=0, sum=0, cnt=0;\n\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    cout.tie(NULL);\n    int A[10];\n\n    forr(i,n)\n    {\n        cin>>A[i];\n    }\n    sort(A,A+n, greater<>());\n    forr(i,3)\n    {\n        cout<<A[i]<<endl;\n    }\n    return 0;\n}\n\n",
    "translated_code": "#include <bits/stdc++.h>\n#include <omp.h>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<int> vi;\ntypedef pair<int, int> ii;\ntypedef pair<ll, int> li;\ntypedef pair<int, ll> il;\ntypedef vector<ii> vii;\ntypedef vector<il> vil;\ntypedef vector<li> vli;\n\n#define F first\n#define S second\n#define pb(x) push_back(x)\n#define mp(a,b) make_pair(a,b)\n#define sz size()\n#define all(A)    A.begin(), A.end()\n#define mem(a, b) memset(a, b, sizeof(a))\n#define f0(i,b)   for(int i=0;i<(b);i++)\n#define f1(i,b)   for(int i=1;i<=(b);i++)\n#define f2(i,a,b) for(int i=(a);i<=(b);i++)\n#define fr(i,b,a) for(int i=(b);i>=(a);i--)\n#define rep(i,a,b,c) for(int i=(a);i<=(b);i+=(c))\n#define mod 1000000007\n\n#define forr(i,n)    for(i=0; i<n; i++)\n#define whilee(i,t)  while(i<t)\n#define  sl(a)  scanf(\"%lld\",&a)\n#define  pl(a)  printf(\"%lld\",a)\n\n//for(auto it =A.begin(); it<A.end(); it++)\n//sort(A.begin(),A.end());\n//binary_search(A.begin(),A.end(),x);\n//reverse(A.begin(), A.end());\n//cout << *max_element(A.begin(), A.end());\n//cout << *min_element(A.begin(), A.end());\n//count(A.begin(), A.end(), X); //counts the occurrences of X\n//distance(A.begin(),A.end());  //distance between first to last element\n//accumulate(A.begin(), A.end(), 0); //add\n//next_permutation(A.begin(), A.end());\n//prev_permutation(A.begin(), A.end());\n//swap(S[0], T[0]);\n//scanf(\"%d\",&x);\n//printf(\"%d\\n\",x);\n\n//vector <int> A;\n//deque <int> A;\n//queue <int> A;\n//stack <int> A;\n//set <int> A;\n//map <int,int> A;\n//pair <int,int> A ;\n//vector <pair <int,int>> A ;\n//char ch;\n//string S, T, U;\nll i, j, k, a, b, c, d, f, g, h, l, m, n=10, p, q, r, s, t, w, x, y, z, maxx=INT_MIN, minn=INT_MAX, ans=0, sum=0, cnt=0;\n\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    cout.tie(NULL);\n    int A[10];\n\n    forr(i,n)\n    {\n        cin>>A[i];\n    }\n    sort(A,A+n, greater<>());\n    #pragma omp parallel for\n    forr(i,3)\n    {\n        cout<<A[i]<<endl;\n    }\n    return 0;\n}",
    "refined": false,
    "source": "/tmp/tmpzdf_lams/program_20.cpp",
    "executable": "/tmp/tmpzdf_lams/program_20",
    "compile_stdout": "",
    "compile_stderr": "",
    "compile_success": true,
    "run_stdout": "",
    "run_stderr": "Timeout",
    "run_success": false
  },
  {
    "id": "s055507883.cpp",
    "original_code": "#include<iostream>\n#include<algorithm>\n#include<string>\n#include<vector>\n#define rep(i,n) for(int i=0;i<n;i++)\n#define all(n) n.begin(),n.end()\nusing namespace std;\n\nint main()\n{\n    const int N = 10;\n    vector<int> h;\n    int hnum = 0;\n    rep(i,N) \n    {\n        cin >> hnum;\n        h.push_back(hnum);\n    }\n\n    sort(all(h));\n\n    cout << h[9] << endl;\n    cout << h[8] << endl;\n    cout << h[7] << endl;\n\n\n\n    return 0;\n}",
    "translated_code": "#include<iostream>\n#include<algorithm>\n#include<string>\n#include<vector>\n#include<omp.h>\n#define rep(i,n) for(int i=0;i<n;i++)\n#define all(n) n.begin(),n.end()\nusing namespace std;\n\nint main()\n{\n    const int N = 10;\n    vector<int> h;\n    int hnum = 0;\n    rep(i,N) \n    {\n        cin >> hnum;\n        h.push_back(hnum);\n    }\n\n    sort(all(h));\n\n    #pragma omp parallel\n    {\n        #pragma omp single\n        {\n            cout << h[9] << endl;\n            cout << h[8] << endl;\n            cout << h[7] << endl;\n        }\n    }\n\n    return 0;\n}",
    "refined": false,
    "source": "/tmp/tmpzdf_lams/program_21.cpp",
    "executable": "/tmp/tmpzdf_lams/program_21",
    "compile_stdout": "",
    "compile_stderr": "",
    "compile_success": true,
    "run_stdout": "",
    "run_stderr": "Timeout",
    "run_success": false
  },
  {
    "id": "s055532349.cpp",
    "original_code": "#include<stdio.h>\n#include<iostream>\n\nusing namespace std;\n\nint main(){\n    long long int a[10],temp,i,j;\n    for(i=0;i<10;i++){\n        cin>>a[i];\n    }\n    for(i=0;i<10;i++){\n        for(j=0;j<10-i-1;j++){\n            if(a[j]>a[j+1]){\n                temp=a[j];\n                a[j]=a[j+1];\n                a[j+1]=temp;\n            }\n        }\n    }\n    for(int i=10-1;i>6;i--){\n        cout<<a[i]<<\"\\n\";\n    }\n    return 0;\n}",
    "translated_code": "#include<stdio.h>\n#include<iostream>\n#include<omp.h>\n\nusing namespace std;\n\nint main(){\n    long long int a[10],temp,i,j;\n    for(i=0;i<10;i++){\n        cin>>a[i];\n    }\n    #pragma omp parallel for\n    for(i=0;i<10;i++){\n        for(j=0;j<10-i-1;j++){\n            if(a[j]>a[j+1]){\n                temp=a[j];\n                a[j]=a[j+1];\n                a[j+1]=temp;\n            }\n        }\n    }\n    #pragma omp parallel for\n    for(int i=10-1;i>6;i--){\n        cout<<a[i]<<\"\\n\";\n    }\n    return 0;\n}",
    "refined": false,
    "source": "/tmp/tmpzdf_lams/program_22.cpp",
    "executable": "/tmp/tmpzdf_lams/program_22",
    "compile_stdout": "",
    "compile_stderr": "",
    "compile_success": true,
    "run_stdout": "",
    "run_stderr": "Timeout",
    "run_success": false
  },
  {
    "id": "s056082383.cpp",
    "original_code": "#include <iostream>\nusing namespace std;\n\nint main()\n{\n    int height, First,Second,Third,index;\n    First = Second = Third = 0;\n\n    for(index=0; index<10; index++)\n   {\n      cin >> height;\n\n      if(height > First)\n      {\n           Third = Second;\n           Second = First;\n           First = height;\n      }\n      else if(height > Second && height <= First)\n      {\n          Third = Second;\n          Second = height;\n      }\n      else if(height > Third && height <= Second)\n          Third = height;\n    }\n\n\n    cout << First << endl << Second << endl << Third << endl;\n\n    return 0;\n}\n ",
    "translated_code": "#include <iostream>\n#include <omp.h>\nusing namespace std;\n\nint main()\n{\n    int height, First,Second,Third,index;\n    First = Second = Third = 0;\n\n    #pragma omp parallel for\n    for(index=0; index<10; index++)\n   {\n      cin >> height;\n\n      #pragma omp critical\n      {\n          if(height > First)\n          {\n               Third = Second;\n               Second = First;\n               First = height;\n          }\n          else if(height > Second && height <= First)\n          {\n              Third = Second;\n              Second = height;\n          }\n          else if(height > Third && height <= Second)\n              Third = height;\n      }\n    }\n\n\n    cout << First << endl << Second << endl << Third << endl;\n\n    return 0;\n}",
    "refined": false,
    "source": "/tmp/tmpzdf_lams/program_23.cpp",
    "executable": "/tmp/tmpzdf_lams/program_23",
    "compile_stdout": "",
    "compile_stderr": "",
    "compile_success": true,
    "run_stdout": "",
    "run_stderr": "Timeout",
    "run_success": false
  },
  {
    "id": "s061819799.cpp",
    "original_code": "#include <iostream>\n\nint main()\n{\n    int n_1st;\n    int n_2nd;\n    int n_3rd;\n    int n;\n    \n    n_1st = n_2nd = n_3rd = 0;\n\n    while (std::cin >> n){\n        if (n > n_1st){\n            n_3rd = n_2nd;\n            n_2nd = n_1st;\n            n_1st = n;\n        }\n        else if (n > n_2nd){\n            n_3rd = n_2nd;\n            n_2nd = n;\n        }\n        else if (n > n_3rd){\n            n_3rd = n;\n        }\n    }\n    \n    std::cout << n_1st << std::endl;\n    std::cout << n_2nd << std::endl;\n    std::cout << n_3rd << std::endl;\n    \n    return 0;\n}",
    "translated_code": "#include <iostream>\n#include <omp.h>\n\nint main()\n{\n    int n_1st;\n    int n_2nd;\n    int n_3rd;\n    int n;\n    \n    n_1st = n_2nd = n_3rd = 0;\n\n    #pragma omp parallel\n    {\n        #pragma omp for\n        for (int i = 0; i < n; i++){\n            int n;\n            std::cin >> n;\n            if (n > n_1st){\n                n_3rd = n_2nd;\n                n_2nd = n_1st;\n                n_1st = n;\n            }\n            else if (n > n_2nd){\n                n_3rd = n_2nd;\n                n_2nd = n;\n            }\n            else if (n > n_3rd){\n                n_3rd = n;\n            }\n        }\n    }\n    \n    std::cout << n_1st << std::endl;\n    std::cout << n_2nd << std::endl;\n    std::cout << n_3rd << std::endl;\n    \n    return 0;\n}",
    "refined": false,
    "source": "/tmp/tmpzdf_lams/program_24.cpp",
    "executable": "/tmp/tmpzdf_lams/program_24",
    "compile_stdout": "",
    "compile_stderr": "",
    "compile_success": true,
    "run_stdout": "",
    "run_stderr": "Timeout",
    "run_success": false
  },
  {
    "id": "s065531967.cpp",
    "original_code": "#include<iostream>\n  using namespace std;\n   int main(){\n      int a[10];\n      int temp;\n      for(int m=0; m<10; m++)\n      {\n          cin >> a[m];\n      }\n    temp=a[0];\n      for(int i=0; i<10; i++)\n      {\n          for(int j=0; j<10;j++)\n          {\n          if(a[i] > a[j])\n          {\n            temp=a[i];\n            a[i]=a[j];\n            a[j]=temp;\n          }\n        }\n      }\n      for(int k=0; k<3; k++)\n      {\n          cout << a[k]<< endl;\n      }\n   }",
    "translated_code": "#include<iostream>\n#include<omp.h>\n  using namespace std;\n   int main(){\n      int a[10];\n      int temp;\n      for(int m=0; m<10; m++)\n      {\n          cin >> a[m];\n      }\n    temp=a[0];\n      #pragma omp parallel for shared(a, temp)\n      for(int i=0; i<10; i++)\n      {\n          for(int j=0; j<10;j++)\n          {\n          if(a[i] > a[j])\n          {\n            temp=a[i];\n            a[i]=a[j];\n            a[j]=temp;\n          }\n        }\n      }\n      for(int k=0; k<3; k++)\n      {\n          cout << a[k]<< endl;\n      }\n   }",
    "refined": false,
    "source": "/tmp/tmpzdf_lams/program_25.cpp",
    "executable": "/tmp/tmpzdf_lams/program_25",
    "compile_stdout": "",
    "compile_stderr": "",
    "compile_success": true,
    "run_stdout": "",
    "run_stderr": "Timeout",
    "run_success": false
  },
  {
    "id": "s067216700.cpp",
    "original_code": "#include <stdio.h>\n\nint main (void){\n    int x1=0, x2 = 0, x3 = 0, input, s;\n\n    for(s=0; s<10; s++){\n        scanf(\"%d\\n\" ,&input);\n        if(x1 < input){\n            x3 = x2;\n            x2 = x1;\n            x1 = input;\n        }else{\n            if(x2 < input){\n                x3 = x2;\n                x2 = input;\n            }else if(x3 < input) x3 = input;\n        }\n    }\n    printf(\"%d\\n%d\\n%d\\n\",x1,x2,x3);\n    return(0);\n}",
    "translated_code": "#include <stdio.h>\n#include <omp.h>\n\nint main (void){\n    int x1=0, x2 = 0, x3 = 0, input, s;\n\n    #pragma omp parallel for\n    for(s=0; s<10; s++){\n        scanf(\"%d\\n\" ,&input);\n        #pragma omp critical\n        {\n            if(x1 < input){\n                x3 = x2;\n                x2 = x1;\n                x1 = input;\n            }else{\n                if(x2 < input){\n                    x3 = x2;\n                    x2 = input;\n                }else if(x3 < input) x3 = input;\n            }\n        }\n    }\n    printf(\"%d\\n%d\\n%d\\n\",x1,x2,x3);\n    return(0);\n}",
    "refined": false,
    "source": "/tmp/tmpzdf_lams/program_26.cpp",
    "executable": "/tmp/tmpzdf_lams/program_26",
    "compile_stdout": "",
    "compile_stderr": "",
    "compile_success": true,
    "run_stdout": "",
    "run_stderr": "Timeout",
    "run_success": false
  },
  {
    "id": "s069012233.cpp",
    "original_code": "#include <iostream>\nusing namespace std;\n\nint main()\n{\n\tint t1 = 0;\n\tint t2 = 0;\n\tint t3 = 0;\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\tint h;\n\t\tcin >> h;\n\t\t\n\t\tif (t1 < h)\n\t\t{\n\t\t\tt3 = t2;\n\t\t\tt2 = t1;\n\t\t\tt1 = h;\n\t\t}\n\t\telse if (t2 < h)\n\t\t{\n\t\t\tt3 = t2;\n\t\t\tt2 = h;\n\t\t\t//t1\n\t\t}\n\t\telse if (t3 < h)\n\t\t{\n\t\t\tt3 = h;\n\t\t}\n\t}\n\t\n\tcout << t1 << endl;\n\tcout << t2 << endl;\n\tcout << t3 << endl;\n\t\n\treturn 0;\n}",
    "translated_code": "#include <iostream>\n#include <omp.h>\nusing namespace std;\n\nint main()\n{\n\tint t1 = 0;\n\tint t2 = 0;\n\tint t3 = 0;\n\t\n\t#pragma omp parallel for\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\tint h;\n\t\tcin >> h;\n\t\t\n\t\t#pragma omp critical\n\t\t{\n\t\t\tif (t1 < h)\n\t\t\t{\n\t\t\t\tt3 = t2;\n\t\t\t\tt2 = t1;\n\t\t\t\tt1 = h;\n\t\t\t}\n\t\t\telse if (t2 < h)\n\t\t\t{\n\t\t\t\tt3 = t2;\n\t\t\t\tt2 = h;\n\t\t\t\t//t1\n\t\t\t}\n\t\t\telse if (t3 < h)\n\t\t\t{\n\t\t\t\tt3 = h;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tcout << t1 << endl;\n\tcout << t2 << endl;\n\tcout << t3 << endl;\n\t\n\treturn 0;\n}",
    "refined": false,
    "source": "/tmp/tmpzdf_lams/program_27.cpp",
    "executable": "/tmp/tmpzdf_lams/program_27",
    "compile_stdout": "",
    "compile_stderr": "",
    "compile_success": true,
    "run_stdout": "",
    "run_stderr": "Timeout",
    "run_success": false
  },
  {
    "id": "s069322445.cpp",
    "original_code": "#include <iostream>\nusing namespace std;\n\nint main() {\n\n\tint r[3] = {0, 0, 0};\n\tint h;\n\n\tfor(int i = 0; i < 10; i++){\n\t\tcin >> h;\n\t\tif(h > r[0]){\n\t\t\tr[2] = r[1];\n\t\t\tr[1] = r[0];\n\t\t\tr[0] = h;\n\t\t}else if(h > r[1]){\n\t\t\tr[2] = r[1];\n\t\t\tr[1] = h;\n\t\t}else if(h > r[2]){\n\t\t\tr[2] = h;\n\t\t}\n\t}\n\n\tfor(int i = 0; i < 3; i++){\n\t\tcout << r[i] << endl;\n\t}\n\n\treturn 0;\n}",
    "translated_code": "#include <iostream>\n#include <omp.h>\nusing namespace std;\n\nint main() {\n\n\tint r[3] = {0, 0, 0};\n\tint h;\n\n\t#pragma omp parallel for\n\tfor(int i = 0; i < 10; i++){\n\t\tcin >> h;\n\t\t#pragma omp critical\n\t\t{\n\t\t\tif(h > r[0]){\n\t\t\t\tr[2] = r[1];\n\t\t\t\tr[1] = r[0];\n\t\t\t\tr[0] = h;\n\t\t\t}else if(h > r[1]){\n\t\t\t\tr[2] = r[1];\n\t\t\t\tr[1] = h;\n\t\t\t}else if(h > r[2]){\n\t\t\t\tr[2] = h;\n\t\t\t}\n\t\t}\n\t}\n\n\tfor(int i = 0; i < 3; i++){\n\t\tcout << r[i] << endl;\n\t}\n\n\treturn 0;\n}",
    "refined": false,
    "source": "/tmp/tmpzdf_lams/program_28.cpp",
    "executable": "/tmp/tmpzdf_lams/program_28",
    "compile_stdout": "",
    "compile_stderr": "",
    "compile_success": true,
    "run_stdout": "",
    "run_stderr": "Timeout",
    "run_success": false
  },
  {
    "id": "s069459738.cpp",
    "original_code": "#include <iostream>\nusing namespace std;\n#include <cstdio>\n#include <string.h>\n#include <stdlib.h>\n#include <math.h>\nint main(void)\n{\n   int i,j,k,l;\n   int a,b,c,d;\n   int memory[2];\n   int height[10];\n   int n;\n\n   for(i=0;i<10;i++) cin >> height[i];\n   \n   for(i=0;i<9;i++) {\n      for(j=9;j>i;j--) {\n         if(height[j] > height[j-1]) {\n            int tmp = height[j];\n            height[j] = height[j-1];\n            height[j-1] = tmp;\n         }\n      }\n   }\n\n   for(i=0;i<3;i++) cout << height[i] << \"\\n\";\n   return 0;\n}",
    "translated_code": "#include <iostream>\n#include <omp.h>\nusing namespace std;\n\nint main(void)\n{\n   int i,j,k,l;\n   int a,b,c,d;\n   int memory[2];\n   int height[10];\n   int n;\n\n   #pragma omp parallel for\n   for(i=0;i<10;i++) cin >> height[i];\n\n   #pragma omp parallel for\n   for(i=0;i<9;i++) {\n      for(j=9;j>i;j--) {\n         if(height[j] > height[j-1]) {\n            int tmp = height[j];\n            height[j] = height[j-1];\n            height[j-1] = tmp;\n         }\n      }\n   }\n\n   #pragma omp parallel for\n   for(i=0;i<3;i++) cout << height[i] << \"\\n\";\n   return 0;\n}",
    "refined": false,
    "source": "/tmp/tmpzdf_lams/program_29.cpp",
    "executable": "/tmp/tmpzdf_lams/program_29",
    "compile_stdout": "",
    "compile_stderr": "",
    "compile_success": true,
    "run_stdout": "",
    "run_stderr": "Timeout",
    "run_success": false
  },
  {
    "id": "s069588127.cpp",
    "original_code": "#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <vector>\n#include <cstring>\n\nusing namespace std;\n\nint a[10],n;\n\nbool cmp(int a,int b){\n\treturn a > b;\n}\n\nint main()\n{\t\n\tfor(int i=0;i<10;i++){\n\t\tcin >> a[i];\n\t}\n\tsort(a,a+10);\n\tfor(int i=9;i>=7;i--) {\n\t\tcout << a[i] << endl;\n\t}\n\treturn 0;\t\n}",
    "translated_code": "#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <vector>\n#include <cstring>\n#include <omp.h>\n\nusing namespace std;\n\nint a[10],n;\n\nbool cmp(int a,int b){\n\treturn a > b;\n}\n\nint main()\n{\t\n\tfor(int i=0;i<10;i++){\n\t\tcin >> a[i];\n\t}\n\tsort(a,a+10);\n\t#pragma omp parallel for\n\tfor(int i=9;i>=7;i--) {\n\t\tcout << a[i] << endl;\n\t}\n\treturn 0;\t\n}",
    "refined": false,
    "source": "/tmp/tmpzdf_lams/program_30.cpp",
    "executable": "/tmp/tmpzdf_lams/program_30",
    "compile_stdout": "",
    "compile_stderr": "",
    "compile_success": true,
    "run_stdout": "",
    "run_stderr": "Timeout",
    "run_success": false
  },
  {
    "id": "s072249009.cpp",
    "original_code": "#include<iostream>\n\nusing namespace std;\n\nint main(){\n\tint f=0,s=0,t=0,num,tmp;\n\t\n\tfor(int i=0;i<10;i++){\n\t\tcin>>num;\n\t\tif(num>t){\n\t\t\tt=num;\n\t\t}\n\t\tif(t>s){\n\t\t\ttmp=s;\n\t\t\ts=t;\n\t\t\tt=tmp;\n\t\t}\n\t\tif(s>f){\n\t\t\ttmp=f;\n\t\t\tf=s;\n\t\t\ts=tmp;\n\t\t}\n\t\t\n\t}\n\tcout << f << endl << s << endl << t << endl;\n\t\n\treturn 0;\n}",
    "translated_code": "#include<iostream>\n#include<omp.h>\n\nusing namespace std;\n\nint main(){\n\tint f=0,s=0,t=0,num,tmp;\n\t\n\t#pragma omp parallel for reduction(max:t)\n\tfor(int i=0;i<10;i++){\n\t\tcin>>num;\n\t\tif(num>t){\n\t\t\tt=num;\n\t\t}\n\t}\n\t\n\t#pragma omp parallel for reduction(max:s)\n\tfor(int i=0;i<10;i++){\n\t\tif(t>s){\n\t\t\ttmp=s;\n\t\t\ts=t;\n\t\t\tt=tmp;\n\t\t}\n\t}\n\t\n\t#pragma omp parallel for reduction(max:f)\n\tfor(int i=0;i<10;i++){\n\t\tif(s>f){\n\t\t\ttmp=f;\n\t\t\tf=s;\n\t\t\ts=tmp;\n\t\t}\n\t}\n\t\n\tcout << f << endl << s << endl << t << endl;\n\t\n\treturn 0;\n}",
    "refined": false,
    "source": "/tmp/tmpzdf_lams/program_31.cpp",
    "executable": "/tmp/tmpzdf_lams/program_31",
    "compile_stdout": "",
    "compile_stderr": "",
    "compile_success": true,
    "run_stdout": "",
    "run_stderr": "Timeout",
    "run_success": false
  },
  {
    "id": "s076457575.cpp",
    "original_code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n#define rep(i,n) for(int i = 0; i < n; i++)\n\nint main(){\n\n\tvector<int> data(10);\n\n\trep(i,10){\n\t\tcin >> data[i];\n\t}\n\n\tsort(data.begin(),data.end());\n\n\trep(i,3){\n\t\tcout << data[9 - i] << endl;\n\t}\n\n\n\treturn 0;\n}",
    "translated_code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <omp.h>\n\nusing namespace std;\n#define rep(i,n) for(int i = 0; i < n; i++)\n\nint main(){\n\n\tvector<int> data(10);\n\n\trep(i,10){\n\t\tcin >> data[i];\n\t}\n\n\tsort(data.begin(),data.end());\n\n\t#pragma omp parallel num_threads(3)\n\t{\n\t\t#pragma omp for\n\t\tfor(int i = 0; i < 3; i++){\n\t\t\tcout << data[9 - i] << endl;\n\t\t}\n\t}\n\n\n\treturn 0;\n}",
    "refined": false,
    "source": "/tmp/tmpzdf_lams/program_32.cpp",
    "executable": "/tmp/tmpzdf_lams/program_32",
    "compile_stdout": "",
    "compile_stderr": "",
    "compile_success": true,
    "run_stdout": "",
    "run_stderr": "Timeout",
    "run_success": false
  },
  {
    "id": "s077574215.cpp",
    "original_code": "#include <stdio.h>\n#include <iostream>\nusing namespace std;\nint main(){\nint height[10],pos,max[3];\nfor(int i=0;i<10;++i)cin >> height[i];\nfor(int i=0;i<3;++i){\n int tmp = 0;\n for(int n=0;n<10;++n){\n  if(tmp<height[n]){\n   tmp = height[n];\n   pos = n;\n  }\n }\n max[i] = tmp;\n height[pos] = 0;\n}\nfor(int i=0;i<3;++i)\n cout << max[i] << \"\\n\";\n return 0;\n}",
    "translated_code": "#include <stdio.h>\n#include <iostream>\n#include <omp.h>\nusing namespace std;\nint main(){\nint height[10],pos,max[3];\n#pragma omp parallel for\nfor(int i=0;i<10;++i)cin >> height[i];\n#pragma omp parallel for\nfor(int i=0;i<3;++i){\n int tmp = 0;\n for(int n=0;n<10;++n){\n  if(tmp<height[n]){\n   tmp = height[n];\n   pos = n;\n  }\n }\n max[i] = tmp;\n height[pos] = 0;\n}\n#pragma omp parallel for\nfor(int i=0;i<3;++i)\n cout << max[i] << \"\\n\";\n return 0;\n}",
    "refined": false,
    "source": "/tmp/tmpzdf_lams/program_33.cpp",
    "executable": "/tmp/tmpzdf_lams/program_33",
    "compile_stdout": "",
    "compile_stderr": "",
    "compile_success": true,
    "run_stdout": "",
    "run_stderr": "Timeout",
    "run_success": false
  },
  {
    "id": "s078173883.cpp",
    "original_code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <functional>\n\nint main(void)\n{\n  const int dataNum = 10;\n\n  std::vector<int> vals;\n  for (int i = 0; i < dataNum; i++) {\n    int newVal;\n    std::cin >> newVal;\n    vals.push_back(newVal);\n  }\n\n  std::sort(vals.begin(), vals.end(), std::greater<int>());\n\n  const int outputDataNum = 3;\n  \n  for (int i = 0; i < outputDataNum; i++) {\n    std::cout << vals[i] << std::endl;\n  }\n\n  return 0;\n}",
    "translated_code": "",
    "refined": true,
    "source": "/tmp/tmpzdf_lams/program_34_refined.cpp",
    "executable": "/tmp/tmpzdf_lams/program_34_refined",
    "compile_stdout": "",
    "compile_stderr": "/usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/11/../../../x86_64-linux-gnu/Scrt1.o: in function `_start':\n(.text+0x1b): undefined reference to `main'\ncollect2: error: ld returned 1 exit status",
    "compile_success": false,
    "run_stdout": "",
    "run_stderr": "Skipped due to compile error",
    "run_success": false
  },
  {
    "id": "s079340330.cpp",
    "original_code": "#include <stdio.h>\n\nint main(){\n\tint a,b[3]={0,0,0};\n\tfor(int i=0;i<10;i++){\n\t\tscanf(\"%d\",&a);\n\t\tif(a>=b[2]){\n\t\t\tif(a>=b[1]){\n\t\t\t\tif(a>=b[0]){\n\t\t\t\t\tb[2]=b[1];\n\t\t\t\t\tb[1]=b[0];\n\t\t\t\t\tb[0]=a;\n\t\t\t\t}else{\n\t\t\t\t\tb[2]=b[1];\n\t\t\t\t\tb[1]=a;\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tb[2]=a;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=0;i<3;i++){\n\t\tprintf(\"%d\\n\",b[i]);\n\t}\n}",
    "translated_code": "#include <stdio.h>\n#include <omp.h>\n\nint main(){\n\tint a,b[3]={0,0,0};\n\t#pragma omp parallel for\n\tfor(int i=0;i<10;i++){\n\t\tscanf(\"%d\",&a);\n\t\t#pragma omp critical\n\t\t{\n\t\t\tif(a>=b[2]){\n\t\t\t\tif(a>=b[1]){\n\t\t\t\t\tif(a>=b[0]){\n\t\t\t\t\t\tb[2]=b[1];\n\t\t\t\t\t\tb[1]=b[0];\n\t\t\t\t\t\tb[0]=a;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tb[2]=b[1];\n\t\t\t\t\t\tb[1]=a;\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tb[2]=a;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=0;i<3;i++){\n\t\tprintf(\"%d\\n\",b[i]);\n\t}\n}",
    "refined": false,
    "source": "/tmp/tmpzdf_lams/program_35.cpp",
    "executable": "/tmp/tmpzdf_lams/program_35",
    "compile_stdout": "",
    "compile_stderr": "",
    "compile_success": true,
    "run_stdout": "",
    "run_stderr": "Timeout",
    "run_success": false
  },
  {
    "id": "s089739726.cpp",
    "original_code": "#include<iostream>\nusing namespace std;\nint main() {\n\tdouble h1,h2,h3;\n\th1=-1;\n\th2=-1;\n\th3=-1;\n\tdouble h;\n\tfor(int i=0;i<10;i++) {\n\t\tcin >> h;\n\t\tif(h > h1) {\n\t\t\th3 = h2;\n\t\t\th2 = h1;\n\t\t\th1 = h;\n\t\t}\n\t\telse if(h > h2) {\n\t\t\th3 = h2;\n\t\t\th2 = h;\n\t\t}\n\t\telse if(h > h3) {\n\t\t\th3 = h;\n\t\t}\n\t}\n\t\n\tcout << h1 << endl;\n\tcout << h2 << endl;\n\tcout << h3 << endl;\n\t\n\treturn 0;\n}",
    "translated_code": "#include<iostream>\n#include<omp.h>\nusing namespace std;\nint main() {\n\tdouble h1,h2,h3;\n\th1=-1;\n\th2=-1;\n\th3=-1;\n\tdouble h;\n\t#pragma omp parallel for\n\tfor(int i=0;i<10;i++) {\n\t\tcin >> h;\n\t\t#pragma omp critical\n\t\t{\n\t\t\tif(h > h1) {\n\t\t\t\th3 = h2;\n\t\t\t\th2 = h1;\n\t\t\t\th1 = h;\n\t\t\t}\n\t\t\telse if(h > h2) {\n\t\t\t\th3 = h2;\n\t\t\t\th2 = h;\n\t\t\t}\n\t\t\telse if(h > h3) {\n\t\t\t\th3 = h;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tcout << h1 << endl;\n\tcout << h2 << endl;\n\tcout << h3 << endl;\n\t\n\treturn 0;\n}",
    "refined": false,
    "source": "/tmp/tmpzdf_lams/program_36.cpp",
    "executable": "/tmp/tmpzdf_lams/program_36",
    "compile_stdout": "",
    "compile_stderr": "",
    "compile_success": true,
    "run_stdout": "",
    "run_stderr": "Timeout",
    "run_success": false
  },
  {
    "id": "s090025448.cpp",
    "original_code": "#include<iostream>\n#include<algorithm>\nusing namespace std;\n \nconst int MAX_N = 9;\nint a[MAX_N];\n   \nint main(){\n \n    for(int i=0; i<=MAX_N; i++){\n        cin >> a[i];\n    }\n      \n    sort(a, a+10);\n    cout << a[9] << endl << a[8] << endl << a[7] << endl;\n \n    return 0;\n}",
    "translated_code": "#include<iostream>\n#include<algorithm>\n#include<omp.h>\nusing namespace std;\n \nconst int MAX_N = 9;\nint a[MAX_N];\n   \nint main(){\n \n    for(int i=0; i<=MAX_N; i++){\n        cin >> a[i];\n    }\n      \n    sort(a, a+10);\n    #pragma omp parallel num_threads(4)\n    {\n        #pragma omp for\n        for(int i=0; i<=MAX_N; i++){\n            cout << a[i] << endl;\n        }\n    }\n \n    return 0;\n}",
    "refined": false,
    "source": "/tmp/tmpzdf_lams/program_37.cpp",
    "executable": "/tmp/tmpzdf_lams/program_37",
    "compile_stdout": "",
    "compile_stderr": "",
    "compile_success": true,
    "run_stdout": "",
    "run_stderr": "Timeout",
    "run_success": false
  },
  {
    "id": "s090195569.cpp",
    "original_code": "#include <iostream>\n#include <cstdio>\n\nusing namespace std;\n\nint main()\n{\n\tint hM[10], I, K, temp;\n\n\tfor(I = 0; I < 10; I = I + 1)\n\t\tscanf(\"%d\", &hM[I]);\n\n\tfor(I = 0; I < 9; I = I + 1)\n\t\tfor(K = 0; K < 9 - I; K = K + 1)\n\t\t\tif(hM[K] < hM[K + 1])\n\t\t\t{\n\t\t\t\ttemp = hM[K];\n\t\t\t\thM[K] = hM[K + 1];\n\t\t\t\thM[K + 1] = temp;\n\t\t\t}\n\n\tfor(I = 0; I < 3; I = I + 1)\n\t\tprintf(\"%d\\n\", hM[I]);\n\n\treturn 0;\n}\n\n",
    "translated_code": "#include <iostream>\n#include <cstdio>\n#include <omp.h>\n\nusing namespace std;\n\nint main()\n{\n\tint hM[10], I, K, temp;\n\n\tfor(I = 0; I < 10; I = I + 1)\n\t\tscanf(\"%d\", &hM[I]);\n\n\t#pragma omp parallel for\n\tfor(I = 0; I < 9; I = I + 1)\n\t\tfor(K = 0; K < 9 - I; K = K + 1)\n\t\t\tif(hM[K] < hM[K + 1])\n\t\t\t{\n\t\t\t\ttemp = hM[K];\n\t\t\t\thM[K] = hM[K + 1];\n\t\t\t\thM[K + 1] = temp;\n\t\t\t}\n\n\t#pragma omp parallel for\n\tfor(I = 0; I < 3; I = I + 1)\n\t\tprintf(\"%d\\n\", hM[I]);\n\n\treturn 0;\n}",
    "refined": false,
    "source": "/tmp/tmpzdf_lams/program_38.cpp",
    "executable": "/tmp/tmpzdf_lams/program_38",
    "compile_stdout": "",
    "compile_stderr": "",
    "compile_success": true,
    "run_stdout": "",
    "run_stderr": "Timeout",
    "run_success": false
  },
  {
    "id": "s093230943.cpp",
    "original_code": "#include <cstdio>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nint main(void) {\n    vector<int> v;\n    for (int i = 0; i < 10; i++) {\n        int input;\n        scanf(\"%d\", &input);\n        v.push_back(input);\n    }\n    sort(v.rbegin(), v.rend());\n    for (int i = 0; i < 3; i++) {\n        printf(\"%d\\n\", v[i]);\n    }\n}",
    "translated_code": "",
    "refined": true,
    "source": "/tmp/tmpzdf_lams/program_39_refined.cpp",
    "executable": "/tmp/tmpzdf_lams/program_39_refined",
    "compile_stdout": "",
    "compile_stderr": "/usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/11/../../../x86_64-linux-gnu/Scrt1.o: in function `_start':\n(.text+0x1b): undefined reference to `main'\ncollect2: error: ld returned 1 exit status",
    "compile_success": false,
    "run_stdout": "",
    "run_stderr": "Skipped due to compile error",
    "run_success": false
  },
  {
    "id": "s093517465.cpp",
    "original_code": "#include <iostream>\nusing namespace std;\nint main(){\n\tint mount[10];\n\tfor(int num=0;num<10;num++){\n\t // cout << \"Mount\"<<num << endl;\n\t  cin >> mount[num];\n    }\n    for(int i=0;i<10;i++){\n     for(int j=i+1;j<10;j++){\n\t  if(mount[i]<mount[j]){\n\t \t int sub=mount[j];\n\t \t mount[j]=mount[i];\n\t \t mount[i]=sub;\n\t   }\n     }\n    }\n   cout << mount[0] << endl;\n   cout << mount[1] << endl;\n   cout << mount[2] << endl;\n  return 0;\n}",
    "translated_code": "#include <iostream>\n#include <omp.h>\nusing namespace std;\nint main(){\n\tint mount[10];\n\tfor(int num=0;num<10;num++){\n\t // cout << \"Mount\"<<num << endl;\n\t  cin >> mount[num];\n    }\n    #pragma omp parallel for\n    for(int i=0;i<10;i++){\n     for(int j=i+1;j<10;j++){\n\t  if(mount[i]<mount[j]){\n\t \t int sub=mount[j];\n\t \t mount[j]=mount[i];\n\t \t mount[i]=sub;\n\t   }\n     }\n    }\n   cout << mount[0] << endl;\n   cout << mount[1] << endl;\n   cout << mount[2] << endl;\n  return 0;\n}",
    "refined": false,
    "source": "/tmp/tmpzdf_lams/program_40.cpp",
    "executable": "/tmp/tmpzdf_lams/program_40",
    "compile_stdout": "",
    "compile_stderr": "",
    "compile_success": true,
    "run_stdout": "",
    "run_stderr": "Timeout",
    "run_success": false
  },
  {
    "id": "s095575061.cpp",
    "original_code": "#include <algorithm>\n#include <iostream>\n\nint main() {\n\tint h[10];\n\n\tfor (int i = 0; i < 10; i++)\n\t\tstd::cin >> h[i];\n\n\tstd::sort(h, h + 10);\n\n\tstd::cout\n\t\t<< h[9] << std::endl\n\t\t<< h[8] << std::endl\n\t\t<< h[7] << std::endl;\n}",
    "translated_code": "",
    "refined": true,
    "source": "/tmp/tmpzdf_lams/program_41_refined.cpp",
    "executable": "/tmp/tmpzdf_lams/program_41_refined",
    "compile_stdout": "",
    "compile_stderr": "/usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/11/../../../x86_64-linux-gnu/Scrt1.o: in function `_start':\n(.text+0x1b): undefined reference to `main'\ncollect2: error: ld returned 1 exit status",
    "compile_success": false,
    "run_stdout": "",
    "run_stderr": "Skipped due to compile error",
    "run_success": false
  },
  {
    "id": "s097434546.cpp",
    "original_code": "#include<iostream>\nusing namespace std;\nint main(){\nint x,No1,No2,No3;\nNo1=0;\nNo2=0;\nNo3=0;\nfor(int i=0;i<10;i++){\ncin>>x;\nif(x>No1){\nNo3=No2;\nNo2=No1;\nNo1=x;\n}else if(x>No2){\nNo3=No2;\nNo2=x;\n}else if(x>No3){\nNo3=x;\n}\n}\ncout<<No1<<endl<<No2<<endl<<No3<<endl;\nreturn 0;\n}",
    "translated_code": "#include<iostream>\n#include<omp.h>\nusing namespace std;\nint main(){\nint x,No1,No2,No3;\nNo1=0;\nNo2=0;\nNo3=0;\n#pragma omp parallel for\nfor(int i=0;i<10;i++){\ncin>>x;\nif(x>No1){\n#pragma omp critical\n{\nif(x>No2){\nNo3=No2;\nNo2=x;\n}else if(x>No3){\nNo3=x;\n}\n}\n}else if(x>No2){\nNo3=No2;\nNo2=x;\n}else if(x>No3){\nNo3=x;\n}\n}\ncout<<No1<<endl<<No2<<endl<<No3<<endl;\nreturn 0;\n}",
    "refined": false,
    "source": "/tmp/tmpzdf_lams/program_42.cpp",
    "executable": "/tmp/tmpzdf_lams/program_42",
    "compile_stdout": "",
    "compile_stderr": "",
    "compile_success": true,
    "run_stdout": "",
    "run_stderr": "Timeout",
    "run_success": false
  },
  {
    "id": "s102927004.cpp",
    "original_code": "#include <iostream>\nusing namespace std;\nint main(){\n\tint m[10];\n\tfor(int i=0;i<10;i++) cin >> m[i];\n\twhile(1){\n\t\tbool j = true;\n\t\tfor(int i=0;i<9;i++){\n\t\t\tif(m[i]<m[i+1]){\n\t\t\t\tint t = m[i];\n\t\t\t\tm[i] = m[i+1];\n\t\t\t\tm[i+1] = t;\n\t\t\t\tj = false;\n\t\t\t}\n\t\t}\n\t\tif(j) break;\n\t}\n\tfor(int i=0;i<3;i++) cout << m[i] << endl;\n}",
    "translated_code": "#include <iostream>\n#include <omp.h>\nusing namespace std;\nint main(){\n\tint m[10];\n\tfor(int i=0;i<10;i++) cin >> m[i];\n\twhile(1){\n\t\tbool j = true;\n\t\t#pragma omp parallel for\n\t\tfor(int i=0;i<9;i++){\n\t\t\tif(m[i]<m[i+1]){\n\t\t\t\tint t = m[i];\n\t\t\t\tm[i] = m[i+1];\n\t\t\t\tm[i+1] = t;\n\t\t\t\tj = false;\n\t\t\t}\n\t\t}\n\t\tif(j) break;\n\t}\n\tfor(int i=0;i<3;i++) cout << m[i] << endl;\n}",
    "refined": false,
    "source": "/tmp/tmpzdf_lams/program_43.cpp",
    "executable": "/tmp/tmpzdf_lams/program_43",
    "compile_stdout": "",
    "compile_stderr": "",
    "compile_success": true,
    "run_stdout": "",
    "run_stderr": "Timeout",
    "run_success": false
  },
  {
    "id": "s107928186.cpp",
    "original_code": "#include <stdio.h>\n\n#define MAX_NUM\t(10)\n\nstatic void \nsort(int h[])\n{\n\tfor (int i = 0; i < MAX_NUM; i++) {\n\t\tfor (int j = MAX_NUM - 1; j > i; j--) {\n\t\t\tif (h[j] > h[j-1]) {\n\t\t\t\tint tmp = h[j];\n\t\t\t\th[j] = h[j-1];\n\t\t\t\th[j-1] = tmp;\n\t\t\t}\n\t\t}\n\t}\n}\n\nint\nmain(void)\n{\n\tchar line[80];\n\tint h[MAX_NUM] = { 0 };\n\n \tfor (int i = 0 ; i < 10; i++) {\n\t\tif (gets(line)) {\n\t\t\tif (sscanf(line, \"%d\", &(h[i])) != 1) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n \t}\n\n\tsort(h);\n\t\n \tfor (int i = 0 ; i < 3; i++) {\n \t\tprintf(\"%d\\n\", h[i]);\n \t}\n\n\treturn 0;\n}",
    "translated_code": "",
    "refined": true,
    "source": "/tmp/tmpzdf_lams/program_44_refined.cpp",
    "executable": "/tmp/tmpzdf_lams/program_44_refined",
    "compile_stdout": "",
    "compile_stderr": "/usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/11/../../../x86_64-linux-gnu/Scrt1.o: in function `_start':\n(.text+0x1b): undefined reference to `main'\ncollect2: error: ld returned 1 exit status",
    "compile_success": false,
    "run_stdout": "",
    "run_stderr": "Skipped due to compile error",
    "run_success": false
  },
  {
    "id": "s109465441.cpp",
    "original_code": "#include<bits/stdc++.h>\n\nusing namespace std;\n\nint main(){\n  int n;\n  int mount[10]={};\n\n  for(int i=0;i < 10;i++){ \n    cin >> mount[i];\n  }\n  sort(mount,mount+10);\n\n  for(int i=9;i > 6;i--){\n    \n    cout << mount[i] << endl;\n  }\n  return 0;\n}\n\n",
    "translated_code": "#include<bits/stdc++.h>\n#include<omp.h>\n\nusing namespace std;\n\nint main(){\n  int n;\n  int mount[10]={};\n\n  for(int i=0;i < 10;i++){ \n    cin >> mount[i];\n  }\n  sort(mount,mount+10);\n\n  #pragma omp parallel for\n  for(int i=9;i > 6;i--){\n    \n    cout << mount[i] << endl;\n  }\n  return 0;\n}",
    "refined": false,
    "source": "/tmp/tmpzdf_lams/program_45.cpp",
    "executable": "/tmp/tmpzdf_lams/program_45",
    "compile_stdout": "",
    "compile_stderr": "",
    "compile_success": true,
    "run_stdout": "",
    "run_stderr": "Timeout",
    "run_success": false
  },
  {
    "id": "s109562584.cpp",
    "original_code": "#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nint main(){\n\tvector<int> vec_height(10);\n\t\n\tfor (auto& h : vec_height)\n\t\tcin >> h;\n\n\tsort(vec_height.begin(), vec_height.end(), greater<int>());\n\t\n\tcout\n\t\t<< vec_height[0] << endl\n\t\t<< vec_height[1] << endl\n\t\t<< vec_height[2] << endl;\n\t\n    return 0;\n}",
    "translated_code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <omp.h>\nusing namespace std;\n\nint main(){\n\tvector<int> vec_height(10);\n\t\n\tfor (auto& h : vec_height)\n\t\tcin >> h;\n\n\tsort(vec_height.begin(), vec_height.end(), greater<int>());\n\t\n\t#pragma omp parallel num_threads(4)\n\t{\n\t\t#pragma omp for\n\t\tfor (int i = 0; i < 3; i++)\n\t\t\tcout << vec_height[i] << endl;\n\t}\n\t\n    return 0;\n}",
    "refined": false,
    "source": "/tmp/tmpzdf_lams/program_46.cpp",
    "executable": "/tmp/tmpzdf_lams/program_46",
    "compile_stdout": "",
    "compile_stderr": "",
    "compile_success": true,
    "run_stdout": "",
    "run_stderr": "Timeout",
    "run_success": false
  },
  {
    "id": "s112306893.cpp",
    "original_code": "#include<iostream>\nusing namespace std;\n\nint main(){\n    int a[3];\n    for (int i = 0;i < 10; i++) {\n        int input;\n        cin >> input;\n\n        if (input > a[0]) {\n            a[2] = a[1];\n            a[1] = a[0];\n            a[0] = input;\n        } else if (input > a[1]) {\n            a[2] = a[1];\n            a[1] = input;\n        } else if (input > a[2]) {\n            a[2] = input;\n        }\n\n    }\n\n    for (int j = 0; j < 3; j++) {\n        cout << a[j] << endl;\n    }\n\n    return 0;\n}",
    "translated_code": "#include<iostream>\n#include<omp.h>\nusing namespace std;\n\nint main(){\n    int a[3];\n    #pragma omp parallel for\n    for (int i = 0;i < 10; i++) {\n        int input;\n        cin >> input;\n\n        if (input > a[0]) {\n            a[2] = a[1];\n            a[1] = a[0];\n            a[0] = input;\n        } else if (input > a[1]) {\n            a[2] = a[1];\n            a[1] = input;\n        } else if (input > a[2]) {\n            a[2] = input;\n        }\n\n    }\n\n    for (int j = 0; j < 3; j++) {\n        cout << a[j] << endl;\n    }\n\n    return 0;\n}",
    "refined": false,
    "source": "/tmp/tmpzdf_lams/program_47.cpp",
    "executable": "/tmp/tmpzdf_lams/program_47",
    "compile_stdout": "",
    "compile_stderr": "",
    "compile_success": true,
    "run_stdout": "",
    "run_stderr": "Timeout",
    "run_success": false
  },
  {
    "id": "s117571931.cpp",
    "original_code": "#include <cstdio>\n#include <iostream>\n#include <algorithm>\n\nusing namespace std;\n\nint main(){\n\tint m[10];\n\t\n\tfor(int i=0; i<10; ++i)\n\t\tscanf(\" %d\", &m[i]);\n\t\n\tsort(m, m+10, greater<int>());\n\t\n\tfor(int i=0; i<3; ++i)\n\t\tprintf(\"%d\\n\", m[i]);\n\t\t\n\treturn 0;\n}",
    "translated_code": "#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <omp.h>\n\nusing namespace std;\n\nint main(){\n\tint m[10];\n\t\n\tfor(int i=0; i<10; ++i)\n\t\tscanf(\" %d\", &m[i]);\n\t\n\tsort(m, m+10, greater<int>());\n\t\n\t#pragma omp parallel for\n\tfor(int i=0; i<3; ++i)\n\t\tprintf(\"%d\\n\", m[i]);\n\t\t\n\treturn 0;\n}",
    "refined": false,
    "source": "/tmp/tmpzdf_lams/program_48.cpp",
    "executable": "/tmp/tmpzdf_lams/program_48",
    "compile_stdout": "",
    "compile_stderr": "",
    "compile_success": true,
    "run_stdout": "",
    "run_stderr": "Timeout",
    "run_success": false
  },
  {
    "id": "s117772886.cpp",
    "original_code": "#include<iostream>\n\nusing namespace std;\n\nint main(){\n    int a=-1,b=-1,c=-1,moun;\n    for(int i=0;i<10;i++){\n        cin>>moun;\n        if(moun>a){\n            c=b;\n            b=a;\n            a=moun;\n        }else if(moun>b){\n            c=b;\n            b=moun;\n        }else if(moun>c)\n            c=moun;\n    }\n    cout<<a<<endl<<b<<endl<<c<<endl;\n    return 0;\n}\n\n",
    "translated_code": "#include<iostream>\n#include<omp.h>\n\nusing namespace std;\n\nint main(){\n    int a=-1,b=-1,c=-1,moun;\n    #pragma omp parallel for\n    for(int i=0;i<10;i++){\n        cin>>moun;\n        #pragma omp critical\n        {\n            if(moun>a){\n                c=b;\n                b=a;\n                a=moun;\n            }else if(moun>b){\n                c=b;\n                b=moun;\n            }else if(moun>c)\n                c=moun;\n        }\n    }\n    cout<<a<<endl<<b<<endl<<c<<endl;\n    return 0;\n}",
    "refined": false,
    "source": "/tmp/tmpzdf_lams/program_49.cpp",
    "executable": "/tmp/tmpzdf_lams/program_49",
    "compile_stdout": "",
    "compile_stderr": "",
    "compile_success": true,
    "run_stdout": "",
    "run_stderr": "Timeout",
    "run_success": false
  }
]